syntax = "proto3";

package bitquery.solana;

option go_package = "github.com/igefined/zero-delta-screener/internal/providers/bitquery/proto";

// DEX trade message based on Bitquery's DexParsedBlockMessage
message DexTrade {
    string signature = 1;
    int64 block_slot = 2;
    int64 block_time = 3;
    
    // Trade details
    string program_id = 4;
    string instruction_type = 5;
    
    // Token information
    TokenInfo base_token = 6;
    TokenInfo quote_token = 7;
    
    // Trade amounts
    double base_amount = 8;
    double quote_amount = 9;
    double price = 10;
    
    // Trading accounts
    string trader = 11;
    string market = 12;
    
    // Trade direction (buy/sell)
    string side = 13;
    
    // DEX information
    string dex_name = 14;
}

message TokenInfo {
    string mint = 1;
    string symbol = 2;
    string name = 3;
    int32 decimals = 4;
}

// Request message for subscribing to DEX trades
message DexTradeRequest {
    repeated string markets = 1;
    repeated string tokens = 2;
    repeated string programs = 3;
    double min_volume_usd = 4;
}

// Stream service definition
service DexStreamService {
    rpc StreamDexTrades(DexTradeRequest) returns (stream DexTrade);
}